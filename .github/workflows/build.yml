name: build

on:
  push:
    branches:
      - develop
      - feature/*

jobs:
  dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prime node modules Cache 
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: yarn install
        run: yarn install --frozen-lockfile

  static-analysis:
    runs-on: ubuntu-latest
    needs: [ dependencies ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore node modules Cache 
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Restore Eslint Cache 
        uses: actions/cache@v2
        id: eslint-cache 
        with:
          path: "**/.eslintcache"
          key: ${{ runner.os }}-eslint

      - name: Restore Jest Cache 
        uses: actions/cache@v2
        id: jest-cache 
        with:
          path: "**/.jest-cache"
          key: ${{ runner.os }}-jest-${{ hashFiles('**/jest.config.js') }}

      - name: Dependencies check
        run: |
          yarn depcheck

      - name: Check for unused files
        run: |
          yarn filecheck

      - name: linting
        run: |
          yarn lint:ci

      - name: Unit Testing
        run: |
          yarn test:ci

  bakery:
    runs-on: ubuntu-latest
    needs: [ dependencies, static-analysis ]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          GRAPHCMS_URL: ${{ secrets.GRAPHCMS_URL }}
          UMAMI_HOST: ${{ secrets.UMAMI_HOST }}
          UMAMI_WEBSITE_ID: ${{ secrets.UMAMI_WEBSITE_ID }}
        with:
          context: .
          push: true
          tags: koenverburg/site:${{ github.run_number }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - # This is a workaround! https://github.com/docker/build-push-action/issues/252 https://github.com/moby/buildkit/issues/1896
        name: Move cache (Remove in the future)
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    #bake:
      #runs-on: ubuntu-latest
      #needs: [ dependencies, static-analysis, build ]
        
      #steps:
          #- name: Clean Yarn

        #- name: Post Slack Notification
          #uses: rtCamp/action-slack-notify@master
          #env:
            #SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
            #SLACK_CHANNEL: deployments
            #SLACK_USERNAME: Deploy Preview | "${{ secrets.PROJECT_NAME }}"
            #SLACK_ICON: https://github.com/koenverburg.png?size=48
            #SLACK_TITLE: ":rocket:New Preview deployment:rocket:"
            #SLACK_MESSAGE: "It's live on: ${{ secrets.PROJECT_PREVIEW_DOMAIN }}"
