name: release

on:
  push:
    branches:
      - main

jobs:

  dependencies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prime node modules Cache 
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: yarn install
        run: yarn install --frozen-lockfile

  static-analysis:
    runs-on: ubuntu-latest
    needs: [ dependencies ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore node modules Cache 
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Restore Eslint Cache 
        uses: actions/cache@v2
        id: eslint-cache 
        with:
          path: "**/.eslintcache"
          key: ${{ runner.os }}-eslint

      - name: Restore Jest Cache 
        uses: actions/cache@v2
        id: jest-cache 
        with:
          path: "**/.jest-cache"
          key: ${{ runner.os }}-jest-${{ hashFiles('**/jest.config.js') }}

      - name: Dependencies check
        run: |
          yarn depcheck
      - name: Check for unused files
        run: |
          yarn filecheck
      - name: linting
        run: |
          yarn lint:ci
      - name: Unit Testing
        run: |
          yarn test:ci
  build:
    runs-on: ubuntu-latest
    needs: [ dependencies, static-analysis ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore node modules Cache 
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Restore Nextjs Build Cache 
        uses: actions/cache@v2
        id: next-cache 
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}

      - name: Dist build
        env:
          GRAPHCMS_URL: ${{ secrets.GRAPHCMS_URL }}
        run: |
          yarn dist
          yarn export

      - name: Post Slack Notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_USERNAME: Deploy Production | "${{ secrets.PROJECT_NAME }}"
          SLACK_ICON: https://github.com/koenverburg.png?size=48
          SLACK_TITLE: ":rocket:New Production deployment:rocket:"
          SLACK_MESSAGE: "It's live on: ${{ secrets.PROJECT_PRODUCTION_DOMAIN }}"
